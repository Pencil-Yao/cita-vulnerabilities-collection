Z-11 Incorrect Shift in Assembly
========

标题
----

Z11 汇编中的错误移位（Incorrect Shift in Assembly）

漏洞等级
--------

中

描述
----

在汇编中使用 shr、shl、sar
操作时，第一个参数代表要移位的位数，第二个参数是要移位的值。注意不要颠倒参数。同样，操作码
signextend 和 byte 也需要注意参数的顺序。

修改建议
--------

建议检查参数顺序，如果不符合逻辑，则交换参数。

案例
----

IncorrectShiftInAssembly_Issue.sol
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

   pragma solidity ^0.8.0;

   contract Test {
       function bad1(int x) external returns (int a) {
           assembly {
               a := shr(x, 0x12) //leak
           }
       }

       function bad2(int x) external returns (int a) {
           assembly {
               a := shl(x, 8) //leak
           }
       }

       function bad3(int x) external returns (int a) {
           assembly {
               a := sar(x, 8) //leak
           }
       }

       function good1(int x) external returns (int a) {
           assembly {
               a := shr(8, x)
           }
       }

       function good2(int x) external returns (int a) {
           assembly {
               a := shl(8, x)
           }
       }

       function good3(int x) external returns (int a) {
           assembly {
               a := sar(8, x)
           }
       }

       function good4() external returns (int a) {
           assembly {
               a := shl(240, 0x3d3d)
           }
       }

       function good5(int x) external returns (int a) {
           assembly {
               a := signextend(8, x)
           }
       }

       function bad5(int x) external returns (int a) {
           assembly {
               a := signextend(x, 8) //leak
           }
       }

       function good6(int x) external returns (int a) {
           assembly {
               a := byte(8, x)
           }
       }

       function bad6(int x) external returns (int a) {
           assembly {
               a := byte(x, 8) //leak
           }
       }
   }
