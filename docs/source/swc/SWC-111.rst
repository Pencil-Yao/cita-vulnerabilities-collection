SWC-111 Use of Deprecated Solidity Functions
========

标题
----

SWC-111 使用过时的Solidity函数（Use of Deprecated Solidity Functions）

漏洞等级
--------

高

描述
----

Solidity
中的多个函数和运算符已弃用，使用它们会降低代码质量。对于新的主要版本的
Solidity 编译器， 使用已弃用的函数和运算符可能会导致副作用和编译错误。

CWE漏洞分类
-----------

`CWE-477：使用过时的函数 <https://cwe.mitre.org/data/definitions/477.html>`__

修改建议
--------

Solidity provides alternatives to the deprecated constructions. Most of
them are aliases, thus replacing old constructions will not break
current behavior. For example, ``sha3`` can be replaced with
``keccak256``.

Solidity
为不推荐使用的结构提供了替代方案。它们大多数是别名，因此替换旧结构不会破坏当前行为。例如，\ ``sha3``\ 可以替换为\ ``keccak256``\ 。

========================= =========================
Deprecated                Alternative
========================= =========================
``suicide(address)``      ``selfdestruct(address)``
``block.blockhash(uint)`` ``blockhash(uint)``
``sha3(...)``             ``keccak256(...)``
``callcode(...)``         ``delegatecall(...)``
``throw``                 ``revert()``
``msg.gas``               ``gasleft``
``constant``              ``view``
``var``                   对应的类型名称
========================= =========================

参考链接
--------

-  `Solidity
   0.4.25+全局变量和函数列表 <https://solidity.readthedocs.io/en/v0.4.25/miscellaneous.html#global-variables>`__
-  `错误处理：assert/require/revert/exception <https://solidity.readthedocs.io/en/v0.4.25/control-structures.html#error-handling-assert-require-revert-and-exceptions>`__
-  `只读函数 <https://solidity.readthedocs.io/en/v0.4.25/contracts.html#view-functions>`__
-  `从Solidity
   0.4.20开始不推荐使用无类型声明 <https://github.com/ethereum/solidity/releases/tag/v0.4.20>`__
-  `Solidity编译器更新日志 <https://github.com/ethereum/solidity/releases>`__

案例
----

deprecated_simple.sol
~~~~~~~~~~~~~~~~~~~~~

::

   pragma solidity ^0.4.24;

   contract DeprecatedSimple {

       // Do everything that's deprecated, then commit suicide.

       function useDeprecated() public constant {

           bytes32 blockhash = block.blockhash(0);
           bytes32 hashofhash = sha3(blockhash);

           uint gas = msg.gas;

           if (gas == 0) {
               throw;
           }

           address(this).callcode();

           var a = [1,2,3];

           var (x, y, z) = (false, "test", 0);

           suicide(address(0));
       }

       function () public {}

   }

deprecated_simple_fixed.sol
~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

   pragma solidity ^0.4.24;

   contract DeprecatedSimpleFixed {

       function useDeprecatedFixed() public view {

           bytes32 bhash = blockhash(0);
           bytes32 hashofhash = keccak256(bhash);

           uint gas = gasleft();

           if (gas == 0) {
               revert();
           }

           address(this).delegatecall();

           uint8[3] memory a = [1,2,3];

           (bool x, string memory y, uint8 z) = (false, "test", 0);

           selfdestruct(address(0));
       }

       function () external {}

   }
